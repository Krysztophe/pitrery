## create_standby.conf

## This file holds the information needed to create a standby server
## using create_stndby. All parameters are mandatory. Shell variables
## are allowed in values.

## Remote configuration, e.g. on the master server
# remote_pgdata: path to PGDATA on the master
remote_pgdata=/var/lib/pgsql/data

# remote_psql: path to the psql binary on the master
# It is needed to issue pg_start_backup() and can provide
# connection options such as username or port. If a password is
# needed, make use of a .pgpass file to avoid prompting.
remote_psql="/usr/bin/psql"

## Local configuration, e.g. this machine, the future slave
# remote_pgdata: path to PGDATA on the slave
# The path must be writable by the user who runs the script.
local_pgdata=/var/lib/pgsql/data


## recovery.conf related configuration
# archive_store: path where WAL segments are archived on the slave
archive_store=/var/lib/pgsql/archived_xlog

# pg_standby: path to the pg_standby binary with possible options
pg_standby="/usr/bin/pg_standby -d -k 64"

# pg_standby_trigger: path to trigger file used to stop the replication
pg_standby_trigger="$local_pgdata/stop_standby"

# pg_standby_append: parameters to append to the restore_command
# it can be used to log pg_standby activity to a file or to syslog
pg_standby_append="2>&1 | logger -t pg_standby -p local0.info"
